apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-metatron
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: metatron
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.metatron.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: metatron
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metatron
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        timestamp: {{ .Release.Time }}
    spec:
      restartPolicy: Always
      volumes:
      - name: metatron-country-config-volume
        configMap:
          name: {{ .Release.Name }}-countries-config
      containers:
      - name: metatron
        image: "{{ .Values.metatron.image.repository }}:{{ .Values.metatron.image.tag }}"
        imagePullPolicy: {{ .Values.metatron.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 80
        - name: mgmt
          containerPort: 6671
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: mgmt
          initialDelaySeconds: 20
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
        env:
        - name: PORT
          value: "80"
        - name: COUNTRIES_CONFIG_FILE
          value: "/etc/config/countriesConfig.yaml"
        volumeMounts:
          - name: metatron-country-config-volume
            mountPath: /etc/config
